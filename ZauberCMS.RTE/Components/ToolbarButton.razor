@using ZauberCMS.RTE.Models

<button type="button"
        class="rte-toolbar-btn rte-btn-@Item.Id @GetButtonClasses()"
        @onmousedown="HandleClick"
        @onmousedown:preventDefault="true"
        @onmousedown:stopPropagation="true"
        disabled="@(!IsEnabled)"
        aria-pressed="@(Item.IsToggle ? IsActive.ToString().ToLower() : null)"
        aria-label="@Item.Label"
        title="@GetTooltipText()">
    @if (string.IsNullOrWhiteSpace(Item.IconCss))
    {
        <span class="rte-toolbar-btn-text">@Item.Label</span>
    }
    else
    {
        <i class="fas @Item.IconCss" aria-hidden="true"></i>
    }
</button>

@code {
    [Parameter] public IToolbarItem Item { get; set; } = null!;
    [Parameter] public bool IsActive { get; set; }
    [Parameter] public bool IsEnabled { get; set; } = true;
    [Parameter] public EventCallback OnClick { get; set; }

    private string GetButtonClasses()
    {
        var classes = new List<string>();

        if (Item.IsToggle && IsActive)
        {
            classes.Add("rte-btn-active");
        }

        if (!IsEnabled)
        {
            classes.Add("rte-btn-disabled");
        }

        return string.Join(" ", classes);
    }

    private string GetTooltipText() => 
        !string.IsNullOrEmpty(Item.Tooltip) ? Item.Tooltip : Item.Label;

    private async Task HandleClick()
    {
        if (IsEnabled)
        {
            await OnClick.InvokeAsync();
        }
    }
}
